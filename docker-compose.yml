version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file: .env.example
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations/0001_init.up.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U otpuser -d otpdb || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 5s

  adminer:
    image: adminer
    container_name: adminer_ui
    restart: always
    ports:
      - "8088:8080"
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 8
      start_period: 5s

  redisinsight:
    image: redislabs/redisinsight:2.52
    restart: always
    volumes:
      - redis-insight-data:/data
    ports:
      - "5540:5540"
    depends_on:
      - redis

volumes:
  pgdata:
  redis-insight-data:
